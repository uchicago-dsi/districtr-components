import mapboxgl from 'mapbox-gl';
import { DistrictrAction, DistrictrState } from '../Districtr.types';
export declare const intializeDistrictrState: (state: DistrictrState) => {
    populationSum: number;
    columnKeys: any[];
    mapboxMap: mapboxgl.Map;
    mapboxAccessToken: string;
    mapboxStyle: string;
    mapboxContainer: string;
    initialViewState: import("../Districtr.types").InitialViewStateProps;
    terrain: boolean;
    satellite: boolean;
    zoom: number;
    center: [number, number];
    tools: import("../Districtr.types").ToolsConfigProps;
    activeTool: "pan" | "brush" | "eraser" | "inspect";
    units: import("../Districtr.types").UnitConfigProps;
    activeUnit: number;
    palette: string[];
    sources: import("../Districtr.types").SourceProps[];
    layers: import("../Districtr.types").LayerProps[];
    coloring: boolean;
    interactiveLayerIds: string[];
    activeInteractiveLayer: number;
    cursorVisible: boolean;
    unitAssignments: any;
    unitPopulations: any;
    unitColumnPopulations: any;
    geometryKey: string;
    featureKey: string;
    hoveredFeatures: any[];
    brushSizeValue: number;
    brushSize: number;
    events: any[];
    columnSets: import("../Districtr.types").ColumnSets;
    lockedUnits: any;
    hiddenUnits: any;
    longitude?: number;
    latitude?: number;
    bearing?: number;
    pitch?: number;
    padding?: mapboxgl.PaddingOptions;
    bounds?: mapboxgl.LngLatBoundsLike;
    compositorData?: any;
    paintByCounty?: boolean;
    paintedCountyGEOIDs: any;
    allFeatures?: any;
    allFeaturesLoaded?: boolean;
    activeDemoOverlay?: string;
    activeDemoLabel?: string;
    changedFeatures?: any[];
    changeHistory?: [];
    historyIndex?: number;
};
export declare const districtrReducer: (state: DistrictrState, action: DistrictrAction) => DistrictrState;
